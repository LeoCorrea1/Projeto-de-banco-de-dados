üß† O que √© GROUP BY?
GROUP BY √© usado para agrupar linhas com valores iguais em colunas espec√≠ficas. Ap√≥s agrupar, voc√™ geralmente aplica fun√ß√µes de agrega√ß√£o como:

COUNT() ‚Äî conta registros.

AVG() ‚Äî calcula a m√©dia.

SUM() ‚Äî soma.

MIN() / MAX() ‚Äî m√≠nimo/m√°ximo.

üìö Explica√ß√£o com seus exemplos
‚úÖ Exemplo 1:
sql
Copiar
Editar
-- Quantidade de livros por editora
SELECT idEditora, COUNT(*) AS total_livros
FROM Livro
GROUP BY idEditora;
Explica√ß√£o:

Agrupa os livros pela idEditora.

Conta quantos livros existem para cada editora.

üßæ Resultado:

idEditora	total_livros
1	3
2	5

‚úÖ Exemplo 2:
sql
Copiar
Editar
-- Pre√ßo m√©dio dos livros por editora
SELECT idEditora, AVG(preco) AS preco_medio
FROM Livro
GROUP BY idEditora;
Explica√ß√£o:

Agrupa por editora (idEditora).

Calcula a m√©dia de pre√ßo dos livros de cada editora.

üßæ Resultado:

idEditora	preco_medio
1	45.90
2	30.00

‚úÖ Exemplo 3:
sql
Copiar
Editar
-- Soma de livros por g√™nero, com filtro no HAVING
SELECT idGenero, COUNT(*) AS qtd_livros
FROM Livro
GROUP BY idGenero
HAVING COUNT(*) > 1;
Explica√ß√£o:

Agrupa por g√™nero (idGenero).

Conta quantos livros existem em cada g√™nero.

O HAVING filtra grupos com mais de 1 livro.

üßæ Exemplo:

idGenero	qtd_livros
2	3
3	4

üî∏ HAVING √© como o WHERE, mas usado depois do GROUP BY, pois filtra grupos, n√£o linhas individuais.

‚úÖ Exemplo 4:
sql
Copiar
Editar
-- Autores que escreveram mais de 1 livro
SELECT idAutor, COUNT(*) AS total_livros
FROM Livro_Autor
GROUP BY idAutor
HAVING total_livros > 1;
Explica√ß√£o:

Agrupa pela coluna idAutor.

Conta quantos livros cada autor escreveu (considerando a tabela intermedi√°ria Livro_Autor).

S√≥ mostra autores com mais de 1 livro.

‚úÖ Exemplo 5:
sql
Copiar
Editar
-- N√∫mero de livros por autor (com nome)
SELECT Autor.nome, COUNT(Livro_Autor.idLivro) AS total_livros
FROM Autor
LEFT JOIN Livro_Autor ON Autor.idAutor = Livro_Autor.idAutor
GROUP BY Autor.idAutor, Autor.nome
ORDER BY total_livros DESC;
Explica√ß√£o:

Junta autores com livros.

Agrupa por nome do autor (e idAutor para garantir unicidade).

Conta quantos livros cada autor escreveu.

Ordena do que mais escreveu para o que menos escreveu.
